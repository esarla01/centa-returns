"""change_serial_number_to_production_date

Revision ID: 0c652dc17251
Revises: 538b15350f4c
Create Date: 2025-08-13 15:47:07.363328

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0c652dc17251'
down_revision: Union[str, Sequence[str], None] = '538b15350f4c'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add the new column as nullable
    op.add_column('return_case_items', sa.Column('production_date', sa.String(length=7), nullable=True))
    
    # Step 2: Copy data from serial_number to production_date
    # For existing data, we'll set a default value since we don't have actual production dates
    op.execute("UPDATE return_case_items SET production_date = '01-2024' WHERE production_date IS NULL")
    
    # Step 3: Make the column not null
    op.alter_column('return_case_items', 'production_date', nullable=False)
    
    # Step 4: Drop the old column
    op.drop_column('return_case_items', 'serial_number')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Step 1: Add the old column as nullable
    op.add_column('return_case_items', sa.Column('serial_number', sa.VARCHAR(length=100), nullable=True))
    
    # Step 2: Copy data back (we'll use the production_date as serial_number)
    op.execute("UPDATE return_case_items SET serial_number = production_date WHERE serial_number IS NULL")
    
    # Step 3: Make the column not null
    op.alter_column('return_case_items', 'serial_number', nullable=False)
    
    # Step 4: Drop the new column
    op.drop_column('return_case_items', 'production_date')
    # ### end Alembic commands ###
